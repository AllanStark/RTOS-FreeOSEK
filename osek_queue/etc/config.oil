OSEK OSEK {

OS	QueueOS {
    STATUS = EXTENDED;
    ERRORHOOK = TRUE;
    PRETASKHOOK = FALSE;
	POSTTASKHOOK = FALSE;
	STARTUPHOOK = FALSE;
	SHUTDOWNHOOK = FALSE;
	USERESSCHEDULER = FALSE;
	MEMMAP = FALSE;
};

APPMODE = AppMode1;
EVENT = EventQueue;
EVENT = EventTimeoutPush;
EVENT = EventTimeoutPop;

TASK taskProducer {
    PRIORITY = 20;
    ACTIVATION = 1;
    STACK = 1024;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
    EVENT = EventQueue;
    AUTOSTART = TRUE {
    	APPMODE = AppMode1;
    }
};

TASK taskConsumer {
    PRIORITY = 10;
    ACTIVATION = 1;
    STACK = 1024;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
    EVENT = EventQueue;
    AUTOSTART = TRUE {
    	APPMODE = AppMode1;
    }
};

TASK taskToggle {
    PRIORITY = 10;
    ACTIVATION = 1;
    STACK = 512;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
};

TASK TaskTimeoutPush {
    PRIORITY = 10;
    ACTIVATION = 1;
    STACK = 512;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
    EVENT = EventTimeoutPush;
};
ALARM AlarmTimeoutPush {
    COUNTER = SoftwareCounter;
    ACTION = ACTIVATETASK {
        TASK = TaskTimeoutPush;
    };
};

TASK TaskTimeoutPop {
    PRIORITY = 10;
    ACTIVATION = 1;
    STACK = 512;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
    EVENT = EventTimeoutPop;
};
ALARM AlarmTimeoutPop {
    COUNTER = SoftwareCounter;
    ACTION = ACTIVATETASK {
        TASK = TaskTimeoutPop;
    };
};

ALARM activateProducer {
    COUNTER = SoftwareCounter;
    ACTION = ACTIVATETASK {
        TASK = taskProducer;
    };
};

ALARM activateConsumer {
    COUNTER = SoftwareCounter;
    ACTION = ACTIVATETASK {
        TASK = taskConsumer;
    };
};

ALARM fireToggleLedEvent {
    COUNTER = SoftwareCounter;
    ACTION = ACTIVATETASK {
        TASK = taskToggle;
    };
    AUTOSTART = TRUE {
    	APPMODE = AppMode1;
    	ALARMTIME = 0;
    	CYCLETIME = 300;
    };
};

COUNTER HardwareCounter {
   MAXALLOWEDVALUE = 100;
   TICKSPERBASE = 1;
   MINCYCLE = 1;
   TYPE = HARDWARE;
   COUNTER = HWCOUNTER0;
};

COUNTER SoftwareCounter {
   MAXALLOWEDVALUE = 15000;
   TICKSPERBASE = 1;
   MINCYCLE = 1;
   TYPE = SOFTWARE;
};

ALARM IncrementSWCounter {
   COUNTER = HardwareCounter;
   ACTION = INCREMENT {
      COUNTER = SoftwareCounter;
   };
   AUTOSTART = TRUE {
      APPMODE = AppMode1;
      ALARMTIME = 1;
      CYCLETIME = 1;
   };
};

};
